version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: movie-list-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-movie_list_checker}
      MYSQL_USER: ${DB_USER:-movielist}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - movie-list-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 应用服务
  app:
    build: .
    container_name: movie-list-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      
      # 数据库配置
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-movielist}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-movie_list_checker}
      
      # Google Drive API配置
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REFRESH_TOKEN: ${GOOGLE_REFRESH_TOKEN}
      
      # Google Drive设置
      SHARED_DRIVE_ID: ${SHARED_DRIVE_ID}
      TARGET_FOLDER_PATH: ${TARGET_FOLDER_PATH:-/}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - movie-list-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: movie-list-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - movie-list-network
    profiles:
      - nginx

  # Redis缓存 (可选，用于会话存储和缓存)
  redis:
    image: redis:7-alpine
    container_name: movie-list-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - movie-list-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    profiles:
      - redis

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

# 网络
networks:
  movie-list-network:
    driver: bridge
